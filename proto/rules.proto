syntax = "proto3";
import "node.proto";
import "person.proto";
package greyhouse;

message RuleEffect {
    // lighting? intercom? some sort of notification system?
    string system = 1;
    // optional
    repeated string target = 2;
    // Disable lights. If this is false, lights will not be modified.
    bool disable = 3;
}

// If any of the people are in any of the rooms referenced, this rule applies
// If the room is set, this rule applies
// If the rule location isn't set, this rule applies to the entire house, always.
message RuleLocation {
    repeated Room room = 1;
    repeated PersonId person = 2;
    int64 timeStart = 3;
    int64 timeEnd = 4;
}

message Rule {
    // A name to reference the rule
    string name = 1;
    // Optional conditions.
    RuleLocation room = 2;
    // Side effects.
    repeated RuleEffect modifiers = 3;
}

message RuleList {
    repeated Rule rules = 1;
}

message RuleFilter {
    string name = 1;
    Room room = 2;
}

message CreateRuleResponse {}
message DeleteRuleResponse {}

service Rules {
    rpc Create(Rule) returns (CreateRuleResponse);
    rpc Delete(Rule) returns (DeleteRuleResponse);
    rpc List(RuleFilter) returns (RuleList);
}
