package main

import (
	"os"
	"log"

	"git.circuitco.de/self/greyhouse/thirdparty"
)

func main() {
	log.Print("test")
	keys := map[string]string {
		"on": "0000000011111111101100000100111111",
		"off": "00000000111111111111100000000111",
		"brighten": "0000000011111111100100000110111111",
		"darken": "0000000011111111101110000100011111",
		"white": "0000000011111111101010000101011111",
		"blue1": "0000000011111111100010000111011111",
		"blue2": "0000000011111111011010001001011111",
		"blue3": "0000000011111111001000001101111111",
		"blue4": "0000000011111111011100001000111111",
		"blue5": "0000000011111111111100000000111111",
		"green1": "0000000011111111110110000010011111",
		"green2": "000000001111111010010001011011111",
		"green3": "000000001111111001100101100110111",
		"green4": "000000001111111011110001000011111",
		"green5": "000000001111111001010001101011111",
		"red1": "0000000011111111100110000110011111",
		"red2": "0000000011111111111010000001011111",
		"red3": "0000000011111111000000101111110111",
		"red4": "0000000011111111010100001010111111",
		"red5": "0000000011111111001110001100011111",
		"smooth": "0000000011111111001100001100111111",
		"strobe": "0000000011111111000000001111111111",
		"fade": "0000000011111111010110001010011111",
		"flash": "0000000011111111101100100100110111",
	}
	blaster := thirdparty.NewIrBlaster(uint32(17), keys)
	if len(os.Args) > 1 {
		blaster.SendKey(os.Args[1])
	} else {
		blaster.SendKey("on")
		blaster.SendKey("strobe")
		blaster.SendKey("white")
	}
	log.Print("finished")
}
